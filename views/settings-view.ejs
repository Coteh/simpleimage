<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>User Settings - simpleimage</title>
    <link rel="stylesheet" href="/assets/css/style.css">
    <link rel="stylesheet" href="/assets/css/settings-style.css">
    <link rel="stylesheet" href="/assets/css/form-style.css">
    <link rel="stylesheet" href="/assets/css/comments.css">
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"
        integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>
    <script src="/assets/js/user.bundle.js"></script>
    <script>
        var onPasswordResetSubmitted = function(form) {
            let jsonObj;
            try {
                jsonObj = JSON.parse(this.responseText);
            } catch (err) {
                handleResponseFailure(this.status);
                return console.error("[onPasswordResetSubmitted]", "Error occurred when parsing response", err);
            }

            // Clear out error style from all input fields.
            for (const inputFieldIndex in form.elements) {
                if (form.elements[inputFieldIndex].classList) {
                    form.elements[inputFieldIndex].classList.remove("input-field-error");
                }
            }
            
            if (this.status !== 200) {
                showNotification(jsonObj.message, {
                    error: true,
                    clear: true,
                });

                // If there's an additional info specified with this error,
                // attempt to grab the field (or fields) property, associate with name
                // of corresponding input field, and append error style to it.
                if (jsonObj.additionalInfo) {
                    var fieldObj = jsonObj.additionalInfo.field || jsonObj.additionalInfo.fields;
                    var fieldElems;
                    if (typeof fieldObj === "object") {
                        fieldElems = fieldObj.reduce(function (obj, field) {
                            obj.push(form.elements[field]);
                            return obj;
                        }, []);
                    } else {
                        fieldElems = [form.elements[fieldObj]];
                    }
                    fieldElems.forEach(function (fieldElem) {
                        if (fieldElem) {
                            fieldElem.classList.add("input-field-error");
                        }
                    });
                }
            } else {
                showNotification(jsonObj.message, {
                    error: false,
                    clear: true,
                });
            }
        };

        var submitPasswordReset = function() {
            const form = $("form[id='change-password-form']");
            const action = form.attr("action");
            const req = new XMLHttpRequest();

            req.onload = function () {
                onPasswordResetSubmitted.bind(this)(form[0]);
            };
            req.open("post", action);
            req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            req.send(form.serialize());
        }

        $(function () {
            $("form[id='change-password-form']").on("submit", function(e) {
                e.preventDefault();
                submitPasswordReset();
                return false;
            });
            $("form[id='change-password-form'] .submit-button").click(function (e) {
                $("form[id='change-password-form']").submit();
            });
        });
    </script>
    <%- include("headers") %>
</head>

<body>
    <div id="overlay-backdrop">
    </div>
    <%- include("top-nav-view", {user:sessionUser}) %>
    <div id="contents" class="contents page">
        <div id="notification-overlay-container">
        </div>
        <div id="overlay-container">
        </div>
        <div id="settings-container">
            <div>
                <h2>User Settings</h2>
            </div>
            <div class="settings-view">
                <span>Change Password</span><br/>
                <form action="/settings/change_password" method="POST" id="change-password-form" class="input-form">
                    <span>Old Password</span>
                    <input type="password" name="oldPassword"></input><br />
                    <span>New Password</span>
                    <input type="password" name="newPassword"></input><br />
                    <span>Confirm New Password</span>
                    <input type="password" name="newPasswordConfirm"></input><br />
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>"></input>
                    <!-- TODO should be a button element -->
                    <span class="button submit-button">Submit</span>
                </form>
            </div>
        </div>
        <%- include("footer") %>
    </div>
</body>

</html>